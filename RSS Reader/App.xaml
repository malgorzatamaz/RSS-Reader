<Application x:Class="RSS_Reader.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
         
            <Style x:Key="BorderlessButton" TargetType="{x:Type Button}">
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="border" Background="{TemplateBinding Background}">
                                <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="content" Property="RenderTransform" >
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="content" Property="RenderTransform" >
                                        <Setter.Value>
                                            <ScaleTransform ScaleX=".95" ScaleY=".95" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>




            <Style x:Key="MetroListBox"
           TargetType="{x:Type ListBox}">
                <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
                <Setter Property="VerticalContentAlignment"
                Value="Center" />
                <Setter Property="BorderBrush"
                Value="{DynamicResource BlackBrush}" />
                <Setter Property="Background"
                Value="{DynamicResource WhiteBrush}" />
                <!-- default to 0 -->
                <Setter Property="BorderThickness"
                Value="0" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
                <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
                <Setter Property="SnapsToDevicePixels"
                Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer Focusable="False"
                                      Padding="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsGrouping"
                                 Value="false">
                                    <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled"
                     Value="False">
                        <Setter Property="BorderBrush"
                        Value="{DynamicResource GrayBrush9}" />
                    </Trigger>
                    <Trigger Property="VirtualizingStackPanel.IsVirtualizing"
                     Value="True">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ScrollViewer.CanContentScroll"
                        Value="True" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="VirtualisedMetroListBox"
           TargetType="{x:Type ListBox}"
           BasedOn="{StaticResource MetroListBox}">
                <Setter Property="VirtualizingStackPanel.IsVirtualizing"
                Value="True" />
                <Setter Property="VirtualizingStackPanel.VirtualizationMode"
                Value="Recycling" />
            </Style>

            <Style x:Key="MetroListBoxItem"
           TargetType="{x:Type ListBoxItem}">
                <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
                <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="BorderThickness"
                Value="0" />
                <Setter Property="MinHeight"
                Value="25" />
                <Setter Property="Margin"
                Value="0" />
                <Setter Property="Padding"
                Value="5,0,0,0" />
                <Setter Property="SnapsToDevicePixels"
                Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected"
                                 Value="True">
                                    <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush}" />
                                    <Setter Property="Foreground"
                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                 Value="True">
                                    <Setter Property="IsSelected" Value="True"/>
                                    <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush3}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                 Value="False">
                                    <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush7}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled"
                                           Value="False" />
                                        <Condition Property="IsSelected"
                                           Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource GrayBrush7}" />
                                    <Setter Property="Foreground"
                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected"
                                           Value="True" />
                                        <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush2}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
        </ResourceDictionary>
               
    </Application.Resources>

</Application>
